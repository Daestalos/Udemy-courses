
// Современный формат передачи данных

// <---------------------------------------- JSON -------------------------------------------->

// JavaScript Object Notation - является текстовым форматом обмена данных. Используется как для передачи, так и для хранения данных.

// JSON - это всего-лишь набор пар / ключ / значение. Как и в объекте. Главное правило: ВСЕ строки должны быть в двойных ковычках ("")

// В качестве значний могут быть объекты, массивы, строки, числа, логические значения, либо null

// допустим у нас есть объект persone
const persone = {
    name: 'Alex',
    tel: '+744444444'
};
// представим, что данный объект нам необходимо передать на сервер (на бэкэнд). Напрямую объект мы отправить не можем, сервер и протоколы передачи данных нас просто не поймут, поэтому нам необходимо превратить в один из вариантов, который можно транспортировать и уже после этого с frontend передавать на backend


// <----------------------------------------- Методы JSON ---------------------------------------->

// Перевод объектов JS в нужный нам формат

// 1) stringify - перевод объекта в JSON формат

// берем объект JSON (пишется капсом обязательно), вызываем метод stringify и вовнутрь передаем наш объект
console.log(JSON.stringify(persone)); // = {"name":"Alex","tel":"+744444444"}
// Видим, что все сущности записаны в 2 ковычки, это самое главное правило в JSON

// теперь такой формат данных мы можем отправить на сервер, наши протоколы данных поймут что мы передаем и сервер нормально все это воспримет, потом эти данные придут на серве, начнется какая-то логика, например мы можем записать их в бд, сформировать заявку и т.д.

// 2) parse - сервера приходит JSON и нам необходимо превратить его в обычный объект и его как-то использовать

// так как к нам с сервера сейчас ничего не приходит, обернем строку выше в JSON.parse

console.log(JSON.parse(JSON.stringify(persone))); // = { name: 'Alex', tel: '+744444444' }
// получаем самый обычный объект и можем работать с ним как угодно



// <------------------------ Глубокое копирование объекта --------------------------->

// создадим объект с вложенностью

const pers = {
    name: 'Alex',
    tel: '+744444444',
    parent: {
        mom: 'Olga',
        dad: 'Mike'
    }
}

// делаем глубокую копию объекта
// stringify превратит существующий объект в формат JSON. Parse возьмет JSON и распарсит его обратно в объект JS и поместит его в переменную clone, но при этом будет создан уже полностью глубокий клон, который совершенно не зависит от первоночального объекта
const clone = JSON.parse(JSON.stringify(pers));

clone.parent.mom = 'Ann';
console.log(pers.parent.mom); // Olga
console.log(clone.parent.mom); // Ann